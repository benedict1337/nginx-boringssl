name: NGINX-BoringSSL (all builds)

on:
  push:
    branches:
      - latest
    paths:
      - Dockerfile
      - Dockerfile.modsec
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-boringssl
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-file:
          - { file: Dockerfile, suffix: "" }
          - { file: Dockerfile.modsec, suffix: "-modsec" }
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.GHCR_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.build-file.file }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.GHCR_IMAGE }}
            ${{ env.DOCKER_IMAGE }}
          cache-from: |
            type=registry,ref=${{ env.GHCR_IMAGE }}:cache${{ matrix.build-file.suffix }}
            type=registry,ref=${{ env.DOCKER_IMAGE }}:cache${{ matrix.build-file.suffix }}
          cache-to: |
            type=registry,ref=${{ env.GHCR_IMAGE }}:cache${{ matrix.build-file.suffix }},mode=max
            type=registry,ref=${{ env.DOCKER_IMAGE }}:cache${{ matrix.build-file.suffix }},mode=max
          outputs: |
            type=image,name=${{ env.GHCR_IMAGE }},push-by-digest=true,name-canonical=true,push=true
            type=image,name=${{ env.DOCKER_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Set PLATFORM env variable
        id: platform-var
        run: |
          PLATFORM="${{ matrix.platform }}"
          PLATFORM="${PLATFORM//\//-}"
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV

      - name: Show PLATFORM
        run: echo "Platform is $PLATFORM ${{ env.PLATFORM }}"

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests${{ matrix.build-file.suffix }}
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests${{ matrix.build-file.suffix }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests${{ matrix.build-file.suffix }}-${{ env.PLATFORM }}
          path: ${{ runner.temp }}/digests${{ matrix.build-file.suffix }}/*
          if-no-files-found: error
          retention-days: 1

  push:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        build-file:
          - { file: Dockerfile, suffix: "" }
          - { file: Dockerfile.modsec, suffix: "-modsec" }

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests${{ matrix.build-file.suffix }}
          pattern: digests${{ matrix.build-file.suffix }}-*
          merge-multiple: true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=raw,value=latest${{ matrix.build-file.suffix }},priority=1000

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests${{ matrix.build-file.suffix }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_IMAGE }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKER_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_IMAGE }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.DOCKER_IMAGE }}:${{ steps.meta.outputs.version }}